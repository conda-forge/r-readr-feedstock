From e08d1324fa83c94c3cbaa2d64e4f77e8ba98203b Mon Sep 17 00:00:00 2001
From: Jim Hester <james.f.hester@gmail.com>
Date: Tue, 27 Aug 2019 10:07:49 -0400
Subject: [PATCH] Simplify code to use R connections

---
 inst/rcon/README.md      |  1 -
 rcon                     |  1 -
 src/Makevars             | 31 -------------------------------
 src/Makevars.win         | 11 -----------
 src/connection.h         | 25 +++++++++++++++++++++++++
 src/install.libs.R       |  9 ---------
 src/rcon/connection.c    | 20 --------------------
 src/rcon/connection.h    | 24 ------------------------
 src/write_connection.cpp |  4 ++--
 src/write_connection.h   |  2 +-
 10 files changed, 28 insertions(+), 100 deletions(-)
 delete mode 100644 inst/rcon/README.md
 delete mode 120000 rcon
 delete mode 100644 src/Makevars
 delete mode 100644 src/Makevars.win
 create mode 100644 src/connection.h
 delete mode 100644 src/install.libs.R
 delete mode 100644 src/rcon/connection.c
 delete mode 100644 src/rcon/connection.h

diff --git a/src/Makevars b/src/Makevars
deleted file mode 100644
index 8db0ddda..00000000
--- a/src/Makevars
+++ /dev/null
@@ -1,31 +0,0 @@
-# If R_ARCH exists the shared library will be in e.g. pkgdir/libs/32/readr.so,
-# so we need to go up 2 levels. Otherwise only 1
-ifeq "$(R_ARCH)" ""
-RPATH = '../rcon$(R_ARCH)'
-else
-RPATH = '../../rcon$(R_ARCH)'
-endif
-
-PKG_LIBS = -L. -lrcon -L$(RCON_DIR) -Wl,-rpath,'$$ORIGIN/$(RPATH)'
-PKG_CXXFLAGS = -I. -Ircon
-
-LIBRCON = ../inst/rcon$(R_ARCH)/librcon.so
-RCON_DIR = ../inst/rcon$(R_ARCH)
-
-all: $(SHLIB)
-
-$(SHLIB): $(LIBRCON)
-
-UNAME:=$(shell uname -s)
-ifeq ($(UNAME), Darwin)
-$(LIBRCON): rcon/connection.o
-	mkdir -p $(RCON_DIR)
-	$(SHLIB_LINK) -o $(LIBRCON) $^ -Wl,-install_name,@loader_path/$(RPATH)/librcon.so
-else
-$(LIBRCON): rcon/connection.o
-	mkdir -p $(RCON_DIR)
-	$(SHLIB_LINK) -o $(LIBRCON) rcon/connection.o
-endif
-
-clean:
-	rm -f rcon/connection.o $(LIBRCON)
diff --git a/src/Makevars.win b/src/Makevars.win
deleted file mode 100644
index 9113f930..00000000
--- a/src/Makevars.win
+++ /dev/null
@@ -1,11 +0,0 @@
-PKG_CXXFLAGS = -I. -Ircon
-PKG_LIBS =  -L. -llibrcon -lRiconv
-all: $(SHLIB)
-
-$(SHLIB): librcon.lib
-
-librcon.lib: rcon/connection.o
-	$(CXX) -shared -static-libgcc -Wl,--export-all-symbols -s $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(LIBR) -o $@ $^
-
-clean:
-	rm rcon/connection.o librcon.lib
diff --git a/src/connection.h b/src/connection.h
new file mode 100644
index 00000000..05000f7d
--- /dev/null
+++ b/src/connection.h
@@ -0,0 +1,25 @@
+#pragma once
+
+#include "Rcpp.h"
+
+inline SEXP R_GetConnection(SEXP con) { return con; }
+
+inline size_t R_ReadConnection(SEXP con, void* buf, size_t n) {
+  static Rcpp::Function readBin = Rcpp::Environment::base_env()["readBin"];
+
+  Rcpp::RawVector res = readBin(con, Rcpp::RawVector(0), n);
+  memcpy(buf, res.begin(), res.size());
+
+  return res.length();
+}
+
+inline size_t R_WriteConnection(SEXP con, void* buf, size_t n) {
+  static Rcpp::Function writeBin = Rcpp::Environment::base_env()["writeBin"];
+
+  Rcpp::RawVector payload(n);
+  memcpy(payload.begin(), buf, n);
+
+  writeBin(payload, con);
+
+  return n;
+}
diff --git a/src/install.libs.R b/src/install.libs.R
deleted file mode 100644
index ee1b937e..00000000
--- a/src/install.libs.R
+++ /dev/null
@@ -1,9 +0,0 @@
-files <- c(
-  Sys.glob(paste0("*", SHLIB_EXT)),
-  Sys.glob(paste0("*", ".lib")))
-dest <- file.path(R_PACKAGE_DIR, paste0('libs', R_ARCH))
-dir.create(dest, recursive = TRUE, showWarnings = FALSE)
-file.copy(files, dest, overwrite = TRUE)
-if (file.exists("symbols.rds")) {
-  file.copy("symbols.rds", dest, overwrite = TRUE)
-}
diff --git a/src/rcon/connection.c b/src/rcon/connection.c
deleted file mode 100644
index 527ffc4b..00000000
--- a/src/rcon/connection.c
+++ /dev/null
@@ -1,20 +0,0 @@
-#include "connection.h"
-
-#if R_CONNECTIONS_VERSION != 1
-#error "Missing or unsupported connection API in R"
-#endif
-
-#if defined(R_VERSION) && R_VERSION >= R_Version(3, 3, 0)
-Rconnection get_connection(SEXP con) { return R_GetConnection(con); }
-#else
-extern Rconnection getConnection(int);
-Rconnection get_connection(SEXP con) {
-  if (!Rf_inherits(con, "connection"))
-    Rf_error("invalid connection");
-  return getConnection(Rf_asInteger(con));
-}
-#endif
-
-size_t write_connection(Rconnection con, void* data, size_t n) {
-  return R_WriteConnection(con, data, n);
-}
diff --git a/src/rcon/connection.h b/src/rcon/connection.h
deleted file mode 100644
index 4b26f07f..00000000
--- a/src/rcon/connection.h
+++ /dev/null
@@ -1,24 +0,0 @@
-#ifndef READR_CONNECTION_H_
-#define READR_CONNECTION_H_
-
-#include <Rinternals.h>
-#include <Rversion.h>
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#define class class_name
-#define private private_ptr
-#include <R_ext/Connections.h>
-#undef class
-#undef private
-
-Rconnection get_connection(SEXP con);
-size_t write_connection(Rconnection con, void* data, size_t n);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/src/write_connection.cpp b/src/write_connection.cpp
index 1ccd0525..246743c9 100644
--- a/src/write_connection.cpp
+++ b/src/write_connection.cpp
@@ -4,11 +4,11 @@
 //
 namespace io = boost::iostreams;
 
-connection_sink::connection_sink(SEXP con) { con_ = get_connection(con); }
+connection_sink::connection_sink(SEXP con) { con_ = con; }
 std::streamsize connection_sink::write(const char* s, std::streamsize n) {
   size_t write_size;
 
-  if ((write_size = write_connection(con_, (void*)s, n)) !=
+  if ((write_size = R_WriteConnection(con_, (void*)s, n)) !=
       static_cast<size_t>(n)) {
     Rcpp::stop("write failed, expected %l, got %l", n, write_size);
   }
diff --git a/src/write_connection.h b/src/write_connection.h
index 37588080..aeca9098 100644
--- a/src/write_connection.h
+++ b/src/write_connection.h
@@ -12,7 +12,7 @@ namespace io = boost::iostreams;
 
 class connection_sink {
 private:
-  Rconnection con_;
+  SEXP con_;
 
 public:
   typedef char char_type;
